import re
import os

def match_hash(given_hash):
    hash_pattern = r'`([^`]*)`'
    type_pattern = r'\|\s*\d*\|([^|]+)\|'
    
    hash = ''
    possible_hashes = {}

    dir_path = os.path.dirname(os.path.realpath(__file__))
    file_path = os.path.join(dir_path, "utils/hashes.md")
    
    with open(file_path, "r") as f:
        hashes = f.readlines()

    for line in hashes:
        grep_hash = re.findall(hash_pattern, line)
        grep_type = re.findall(type_pattern, line)
        try:
            if len(given_hash) == len(grep_hash[0]) and re.match(r'[a-fA-F0-9]{' + f'{len(grep_hash[0])}' + r'}', given_hash):
                possible_hashes[grep_type[0]] = grep_hash[0]
                hash = grep_type[0]
        except IndexError:
            continue
    print(f"HASH: {given_hash}")    
    print("- - - - - - - - - - - POSSIBLE HASH-TYPES - - - - - - - - - - -")
    for i, (k, v) in enumerate(possible_hashes.items()):
        print(f"[+] {[i]} {k}, {v}")
    print("- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -")

    return possible_hashes 

