import argparse
import multiprocessing
import subprocess
import re

class scanner:
    def __init__(self, options, open_ports):
        self.parser = argparse.ArgumentParser(description="A simple argparse example")
        self.options = {}
        self.open_ports = {}

    def arguments_parser(self):
        self.parser.add_argument("-v", "--verbose", help="increase output verbosity", action='store_true')
        self.parser.add_argument("-a", "--address", required=True, help="IP address to scan -> example: -a 192.168.1.1")
        self.parser.add_argument("-p", "--port", type=int, default=80, help="Port to scan -> example: -p 80")
        self.parser.add_argument("-p-", "--allports", help="Scan all ports -> example: -p-", action='store_true')
        return self.parser.parse_args()

    def store_arguments(self):
        args = self.arguments_parser()
        self.options = vars(args)
        return None
    
    def use_arguments(self):
        if self.options['allports']:
            for port in range(7000):
                result = subprocess.run(["nc", "-vz", f"{self.options['address']}", f"{port}"], 
                               stdout=subprocess.PIPE, stderr=subprocess.STDOUT,  text=True) 
                output = result.stdout
                if "open" in output:
                    pattern = r'\(.*?\)'
                    service = re.findall(pattern, output)
                    service = re.sub(r'[!"#]', '', service[0])
                    self.open_ports[service] = port
        return None 

    def output_results(self):
        for x, y in self.open_ports.items():
            print(f"SERVICE: {x} : PORT {y} OPEN")

        
if __name__ == '__main__':
    init_scanner = scanner(None, None)
    init_scanner.store_arguments()
    init_scanner.use_arguments()
    init_scanner.output_results()
