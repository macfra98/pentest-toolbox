def formatter(nmap_scan, wfuzz_scan):
    """ NMAP PARTS """
    nmap_keyparts = nmap_scan.split(',')
    nmap_cut = [part for part in nmap_keyparts if  "/" in part]
    nmap_parts = {}
     
    for i, nmap_part in enumerate(nmap_cut):
        nmap_parts[i] = nmap_part.split('/')
    
    """ WFUZZ PARTS """

    return nmap_parts, None

def generate_template(nmap_scan_f, wfuzz_scan_f):
    section_list = [
            "Host:", "OS:", "Web-Technology:",
            "Credentials (ANY):", "Ports-To-Try:",
            "Nmap-Scan:", "Web-Enumeration:", "Dirs-Root ( / ):",
            "Files-Root ( / ):"            
    ]

    with open("notes.xml", "r") as file:
        lines = [line.lstrip('\n') for line in file.readlines()]
    
    skip = False
    for i, line in enumerate(lines):
        for section in section_list:
            '\n'
            if section in line and section == "Nmap-Scan:":
                for k_part, v_part in nmap_scan_f.items():
                    lines[i] += "<rich_text>" + '\n' + "</rich_text>"
                    for key_part in v_part:
                        if not key_part in ['#', 'Host:', 'Ports:', 'Status:', 'tcp', 'open']:
                            lines[i] += "<rich_text foreground='#5757e3e38989'>" + key_part + ' ' + "</rich_text>" 
                        else:
                            lines[i] += "<rich_text>" + key_part + ' ' + "</rich_text>" 
                    lines[i] += '\n'

    with open("notes.xml", 'w') as file:
        file.writelines(lines)

