from docx import Document
from docx.shared import Inches
import subprocess

#TODO: FORMAT A NICE LOOKING PENTEST REPORT MOCKUP, WHICH INCLUDES
# PTES, etc...
#TODO: FIGURE OUT A WAY TO FORMAT GOOD NOTES BASED ON A NMAP SCAN FOR
# CHERRYTREE... (coloried, e.g. http, portnumber, versions, etc.)

class Repgen:
    def __init__(self):
        self.document = Document()
        self.p = None

    def document_setup(self):
        self.document.add_heading('Pentest Report', 0)
        self.p = self.document.add_paragraph('paragraph test')
        self.p.add_run('bold').bold = True
        self.p.add_run(' and some ')
        self.p.add_run('italic').italic = True
        
        self.document.add_heading('Heading, level 1', level=1)
        self.document.add_paragraph('Intense quote', style='Intense Quote')

        self.document.add_paragraph(
            'first item in unordered list', style='List Bullet'
        )
        self.document.add_paragraph(
            'first item in ordered list', style='List Number'
        )

        records = (
            (3, '101', 'Spam'),
            (7, '422', 'Eggs'),
            (4, '631', 'Spam, spam, eggs, and spam')
        )

        table = self.document.add_table(rows=1, cols=3)
        hdr_cells = table.rows[0].cells
        hdr_cells[0].text = 'Qty'
        hdr_cells[1].text = 'Id'
        hdr_cells[2].text = 'Desc'
        for qty, id, desc in records:
            row_cells = table.add_row().cells
            row_cells[0].text = str(qty)
            row_cells[1].text = id
            row_cells[2].text = desc
        self.document.add_page_break()    

    def save_document(self):
        self.document.save('demo.docx')

    def convert_document(self):
        subprocess.run(['libreoffice', "--headless", "--convert-to", "pdf", "demo.docx"])

def main():
    repgen = Repgen()
    repgen.document_setup()
    repgen.save_document()
    repgen.convert_document()

if __name__ == '__main__':
    main()
