from docx import Document
from docx.shared import Inches
import subprocess

#TODO: FORMAT A NICE LOOKING PENTEST REPORT MOCKUP, WHICH INCLUDES
# PTES, etc...
#TODO: FIGURE OUT A WAY TO FORMAT GOOD NOTES BASED ON A NMAP SCAN FOR
# CHERRYTREE... (coloried, e.g. http, portnumber, versions, etc.)

class Repgen:
    def __init__(self):
        self.document = Document()
        self.date_name_org = None
        self.p1_p = None
        self.p2_p1_h = None
        self.p2_p1_h_text = None
        self.p2_p2 = None
        self.p2_p2_text = None
        self.p2_p3 = None
        self.p2_p3_text = None
        self.p2_p4 = None
        self.p2_p4_text = None
        self.p2_p5 = None
        self.p2_p5_text = None
        self.p2_p6 = None
        self.p2_p6_text = None
        self.p2_p7 = None
        self.p2_p7_text = None
        self.p2_p8 = None
        self.p2_p8_text = None

    def document_setup(self):
        self.date_name_org = self.document.add_paragraph("""Name: \nDate: \nOrg: \n""")
        self.document.add_heading("Pentest Report", 0)
        self.p1_p = self.document.add_paragraph("Vulnerabilityanalys of XXXXXX")
        self.document.add_page_break()    

        self.p2_p1_h = self.document.add_heading("Methodology", 1)
        self.p2_p1_h_text = self.document.add_paragraph("The Penetration Testing Execution Standard (PTES) is a detailed guide for conducting penetration tests, created by security experts. It standardizes testing methods, helping security professionals and businesses. It covers testing from planning to reporting, and emphasizes a tailored approach for each organization's needs. The PTES improves penetration testing effectiveness.")

        self.p2_p2 = self.document.add_heading("Pre-engagement Interactions", 2)
        self.p2_p2_text = self.document.add_paragraph("This is the preparation phase for the pen test. It is all about document approvals and tools needed for the test.")

        self.p2_p3 = self.document.add_heading("Intellegence Gathering", 2)
        self.p2_p3_text = self.document.add_paragraph("In this phase information about the target system are gathered from external sources like social media websites, official records etc. This phase comes under OSINT (Open-Source Intelligence).")

        self.p2_p4 = self.document.add_heading("Threat Modelling", 2)
        self.p2_p4_text = self.document.add_paragraph("It is a procedure for optimizing network security by identifying objectives and vulnerabilities, and then defining countermeasures to prevent, or mitigate the effects of, threats to the system. It is skipped in typical pan tests.")

        self.p2_p5 = self.document.add_heading("Vulnerability Analysis", 2)
        self.p2_p5_text = self.document.add_paragraph("This phase discovers and validates vulnerabilities.That is risk that an attacker could exploit and gain authorized access to the system or application.")

        self.p2_p6 = self.document.add_heading("Exploitation", 2)
        self.p2_p6_text = self.document.add_paragraph("In this phase, the tester try to reach the security of the target system using the vulnerabilities previously identified and validated.")

        self.p2_p7 = self.document.add_heading('Post Exploitation', 2)
        self.p2_p7_text = self.document.add_paragraph("This phase maintains the control over target system and collects data.")

        self.p2_p8 = self.document.add_heading('Reporting', 2)
        self.p2_p8_text = self.document.add_paragraph("Documents entire process in a form understandable to the client.")
        
    def save_document(self):
        self.document.save('demo.docx')

    def convert_document(self):
        subprocess.run(['libreoffice', "--headless", "--convert-to", "pdf", "demo.docx"])

def main():
    repgen = Repgen()
    repgen.document_setup()
    repgen.save_document()
    repgen.convert_document()

if __name__ == '__main__':
    main()
