""" This program is a simple scanner that can scan for vulnerabilities """

import subprocess
import argparse
from docx import Document

class VulnScanner:
    """ Class for program """
    def __init__(self):
        """ Initialize arguments """
        self.document = Document()

        self.parser = argparse.ArgumentParser(prog="Vulnscanner",
              description="This program scans for ports & potential vulnerabilities",
              epilog="EXAMPLE: vulnscan -i 127.0.0.1 -p 1,2,3")
        self.args = None
        self.ip = None
        self.data = ""
        self.ports = ""
        self.output = ""

    def argparser(self):
        """ add parser args """
        self.parser.add_argument('-i', '--ip_address',
                                 help="IP_ADDRESS: -i 127.0.0.1",
                                 required=True)
        self.parser.add_argument('-p', '--ports', help="PORTS: -p 1,2,3,...")
        self.args = vars(self.parser.parse_args())

    def init_args(self):
        """ set class arguments to value of parser args """
        for arg_k, arg_v in self.args.items():
            if arg_k == 'ip_address':
                self.ip = arg_v
            elif arg_k == 'ports':
                try:
                    temp_ports = arg_v.split(',')
                    for port in temp_ports:
                        self.ports += port + ','
                    self.ports = self.ports[:-1]
                except ValueError as e:
                    print(f"[-] Something went wrong: {e}")
                    continue

    def nmap_scan(self):
        """ scan using nmap based on arguments """
        command = f"nmap -sV -sC -p {self.ports} {self.ip} --open"
        result = subprocess.run(command, shell=True, capture_output=True, text=True, check=False)
        self.data = result.stdout.split('\n')
        for d in self.data:
            self.output += d + '\n'

    def write_to_docx(self):
        """ Write data to docx file """
        self.document.add_heading('NMAP Scan', 0)
        self.document.add_paragraph(self.output)
        self.document.save('demo.docx')


def main():
    """ Main function """
    vulnscanner = VulnScanner()

    vulnscanner.argparser()
    vulnscanner.init_args()
    vulnscanner.nmap_scan()
    vulnscanner.write_to_docx()

if __name__ == '__main__':
    main()
