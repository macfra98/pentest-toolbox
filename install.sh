#!/bin/bash

echo """[+] PREPARING ENVIRONMENT """
cd ~/pentest-toolbox
python3 -m venv toolbox
source toolbox/bin/activate

echo """WELCOME TO INSTALLATION OF TOOLS"""

# Define the options
options=("binsploit" "repgen" "Done")

# Array to hold selected options
selected=()

# Function to display the menu
show_menu() {
    echo "Select options (enter the number). Select 'Done' to finish:"
    for i in "${!options[@]}"; do
        printf "%s) %s\n" "$((i+1))" "${options[$i]}"
        if [[ " ${selected[*]} " =~ " ${options[$i]} " ]]; then
            echo "   -> Selected"
        fi
    done
}

# Main loop
while true; do
    # Show the menu
    show_menu

    # Read user choice
    read -rp "Enter choice: " choice
    if ! [[ $choice =~ ^[0-9]+$ ]] || [ "$choice" -lt 1 ] || [ "$choice" -gt "${#options[@]}" ]; then
        echo "Invalid option: $choice"
        continue
    fi

    # Handle the selection
    if [ "${options[$((choice-1))]}" == "Done" ]; then
        break
    elif [[ " ${selected[*]} " =~ " ${options[$((choice-1))]} " ]]; then
        # Deselect the option
        selected=(${selected[@]/${options[$((choice-1))]} })
    else
        # Select the option
        selected+=("${options[$((choice-1))]}")
    fi
done

# Display selected options
echo "You selected:"
printf "   %s\n" "${selected[@]}"

requirements_list=()

for element in ${selected[@]}; do
    echo $element
    if [ "$element" == "binsploit" ]; then
        if grep -q "pyyaml" "requirements.txt"; then
            echo "pyyaml" already exists, skipping.
        else
            requirements_list+=("pyyaml")
        fi
    elif [ "$element" == "repgen" ]; then
        if grep -q "wheel" "requirements.txt"; then
            echo "wheel" already exists, skipping.
        else
            requirements_list+=("wheel")
        fi
        if grep -q "openai" "requirements.txt"; then
            echo "openai" already exists, skipping.
        else
            requirements_list+=("openai")
        fi
        if grep -q "python-docx" "requirements.txt"; then
            echo "python-docx" already exists, skipping.
        else
            requirements_list+=("python-docx")
        fi
    else
        echo "[+] There is nothing to install."
        exit 1
    fi
done;

for element in ${requirements_list[@]}; do
    echo "$element" >> requirements.txt
done;

echo "[+] Installing the neccessary packages\n"

cd ~/pentest-toolbox
pip install .

echo "[+] Installation finished!"
echo "[!] USE: 'source toolbox/bin/activate' to begin using the tools"
